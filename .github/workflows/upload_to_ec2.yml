name: Pull and Run Docker Image on EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install SSH Client
      run: |
        sudo apt-get update -y
        sudo apt-get install -y openssh-client

    - name: Set up SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key
        chmod 600 ~/.ssh/ec2_key
        eval "$(ssh-agent -s)"  # Start the SSH agent
        ssh-add ~/.ssh/ec2_key  # Add the SSH key to the agent
        touch ~/.ssh/config
        touch ~/.ssh/known_hosts
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

    - name: Pull Docker Image and Run on EC2
      shell: bash
      run: |
        ssh -v -i ~/.ssh/ec2_key -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Ensure correct permissions for SSH directories and files

          # Update package list
          apt update

          # Check for Docker installation, and install if not found
          if ! command -v docker &> /dev/null; then
              apt install -y docker.io
          fi

          # Stop and remove existing container if it exists
          if [ "$(docker ps -q -f name=sales_etl_container)" ]; then
              docker stop sales_etl_container
              docker rm sales_etl_container
          fi

          # Pull the Docker image from Docker Hub using the commit SHA as the tag
          docker pull talalbadreddine/sales_etl:${{ github.sha }}

          # Run the Docker container
          docker run -d --name sales_etl_container talalbadreddine/sales_etl:${{ github.sha }}
        EOF